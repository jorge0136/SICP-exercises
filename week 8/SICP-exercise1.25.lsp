
#lang racket
(require racket/trace)
; Exercise 1.25: Alyssa P. Hacker complains that we went to a lot of extra work in writing expmod.
; After all, she says, since we already know how to compute exponentials, we could have simply
; written

(define (expmod_alyssa base exp m)
  (remainder (fast-expt base exp) m))
; Is she correct? Would this procedure serve as well for our fast prime tester? Explain.

(define (square x)
  (* x x))


(define (fast-expt b n)
  (cond ((= n 0)
         1)
        ((even? n)
         (square (fast-expt b (/ n 2))))
        (else
         (* b (fast-expt b (- n 1))))))
(trace fast-expt)



; original

(define (expmod base exp m)
  (cond ((= exp 0) 1)
        ((even? exp)
         (remainder
          (square (expmod base (/ exp 2) m))
          m))
        (else
         (remainder
          (* base (expmod base (- exp 1) m))
          m))))
(trace expmod)

;(fast-expt 999 1009)
(expmod 999 1009 1011)

; The expmod problem find the remainder at each step, where the alternative only finds the
; remainder at the very end. You'd need to find the remainder for a very large number with fast-expt
; given the above: 364399372143184766940593982850480586885202132413711502383828473363231957539506333939068646945895577134861483981509425707245225539655935094656207741111544590037638874812680771048157029471263350690847301371663903454019260843754323689421025655520703917514749855136986301080106595745098451935165894360342431677665236302147709414129489345425823775659772457189970742437354435884947351378167134711187851381243183409987980714642739907940893741354354171519461674847266283183899364238128910093657018870251403628121335316317434696894891906550157044484555088897231929698690699934204810578989649860171978089260464109180386684981120336382665099173168978167284501524434312025980897380936299674649954475455967152529306319356824225799635894262157113048361857722980261462495885346889052371811224581377697673840094648271742457108857334096998624287792748293632671566234332810430323260727306964141058442933203635073068123065005605004365635958671800969063288874249263598295260110999610393145391104131541243229697440603633267971555063752226478577038893001847393079970465463611410447714153583429517981387392776691743000065842954078695855108676503566676860532422202163227426786991629268256432645543167250231911687642506737949436473223992055460569933291146017440194146321283145450248726630763949029455429810564141589766200147033172492348820358180968607664622675428343762868961860867326982306802459962606478786001401280591092261956610226494736590612873176950628444009895405596978895769211227252655451646132515865776823952598087793654838904154149226605285089487042204533517353593745958694463413946122090704848756748772761171784850638555753711607741425606945235021226508313937245866242545732294307350456924437574100109957994786166400847812520955066756688571716324884012958312963212258087588617477618829512440299450250129919069124734047163512944706078058920767762828503466765008746509728563852052640042279580064734250762886880091341568287342209968923778489909593184503613757991764012011443348269637403166203570524266211878314650867542748268690477043487535280137807292919059818838561944251534777789616102229426040403201051668338882148158599851696268815557265382482923177374831513146521275513937137567955128637565043395822868952385115316506707252476203467113432256778041015304600943689645663324572754078240413223213074888394206179554695379670241241507239643442879007022250373447765864884021906189784432448830653902803405970536348277949296476191534073406632641696724007254267915689534797557854636039994536560687236561346687400751512846401017930065874759256660083571044136191260522050030587477371178281915314233253015207344621383641021524691856439006782548014931048183690746977678527056316449299360956463998271487850249155760379249491467110579614946635061341630033518575809163906700025502208516912068917382784159181485308639793475209272842671144464684407809638898178115410315219460896118580525884781583043258351206209236183485248568116632096468862601453983374291481235115349930948637267127949116768540903280560600089526255690996999541502937154552822075465008999
